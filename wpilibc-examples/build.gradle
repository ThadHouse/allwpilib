import org.gradle.language.base.internal.ProjectLayout

apply plugin: 'cpp'
apply plugin: 'visual-studio'
apply plugin: 'edu.wpi.first.NativeUtils'

ext.onlyAthena = true
apply from: '../config.gradle'

ext.examplesMap = [:]

def tree = new File("$projectDir/src")
tree.list().each {
    examplesMap.put(it, [])
}

model {
    dependencyConfigs {
        wpiutil(DependencyConfig) {
            groupId = 'edu.wpi.first.wpiutil'
            artifactId = 'wpiutil-cpp'
            headerClassifier = 'headers'
            ext = 'zip'
            version = '+'
            sharedConfigs = examplesMap
        }
        ntcore(DependencyConfig) {
            groupId = 'edu.wpi.first.ntcore'
            artifactId = 'ntcore-cpp'
            headerClassifier = 'headers'
            ext = 'zip'
            version = '+'
            sharedConfigs = examplesMap
        }
    }
}

class ExampleComponentRules extends RuleSource {
    @Mutate
    void createComponent(ComponentSpecContainer tasks, ProjectLayout projectLayout) {
        projectLayout.projectIdentifier.examplesMap.each {
            tasks.create(it.key, NativeLibrarySpec) {
                binaries.all { binary->
                    //projectLayout.projectIdentifier.rootProject(':ni-libraries').addNiLibrariesToLinker(binary)
                    binary.lib project: ':hal', library: 'halAthena', linkage: 'shared'
                    binary.lib project: ':wpilibc', library: 'wpilibc', linkage: 'shared'
                }
            }
        }
    }
}

apply plugin: ExampleComponentRules
