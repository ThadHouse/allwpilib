// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

namespace NetworkTables;

public partial interface IGenericPublisher
{

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetBoolean(bool value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetBoolean(bool value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultBoolean(bool defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetInteger(long value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetInteger(long value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultInteger(long defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetFloat(float value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetFloat(float value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultFloat(float defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetDouble(double value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetDouble(double value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultDouble(double defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetRaw(byte[] value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetRaw(byte[] value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultRaw(byte[] defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetBooleanArray(bool[] value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetBooleanArray(bool[] value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultBooleanArray(bool[] defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetIntegerArray(long[] value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetIntegerArray(long[] value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultIntegerArray(long[] defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetFloatArray(float[] value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetFloatArray(float[] value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultFloatArray(float[] defaultValue);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <param name="time">timestamp; 0 indicates current NT time should be used</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetDoubleArray(double[] value, long time);

    /// <summary>
    /// Publish a new value.
    /// </summary>
    /// <param name="value">value to publish</param>
    /// <returns>False if the topic already exists with a different type</returns>
    bool SetDoubleArray(double[] value);

    /// <summary>
    /// Sets the entry's value if it does not exist.
    /// </summary>
    /// <param name="defaultValue">the default value  to set</param>
    /// <returns>False if the entry already exists with a different type</returns>
    bool SetDefaultDoubleArray(double[] defaultValue);

}
