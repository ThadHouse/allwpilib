// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

namespace NetworkTables;

/// <summary>
/// NetworkTables Raw subscriver.
/// </summary>
public interface IRawSubscriber : ISubscriber
{
    /// <summary>
    /// Gets the corresponding topic.
    /// </summary>
    new RawTopic Topic { get; }

    /// <summary>
    /// Get the last published value.
    /// If no value has been published, returns the stored default value.
    /// </summary>
    /// <returns>value</returns>
    byte[] Get();

    /// <summary>
    /// Get the last published value.
    /// If no value has been published, returns the passed default value.
    /// </summary>
    /// <param name="defaultValue">default value to return if no value has been published</param>
    /// <returns>value</returns>
    byte[] Get(byte[] defaultValue);

    /// <summary>
    /// Get the last published value along with its timestamp.
    /// If no value has been published, returns the stored default value and a timestamp of 0.
    /// </summary>
    /// <returns>timestamped value</returns>
    TimestampedObject<byte[]> GetAtomic();

    /// <summary>
    /// Get the last published value along with its timestamp.
    /// If no value has been published, returns the passed default value and a timestamp of 0.
    /// </summary>
    /// <param name="defaultValue">default value to return if no value has been published</param>
    /// <returns>timestamped value</returns>
    TimestampedObject<byte[]> GetAtomic(byte[] defaultValue);

    /// <summary>
    /// Get an array of all value changes since the last call to ReadQueue.
    /// Also provides a timestamp for each value.
    /// </summary>
    /// <remarks>
    /// The "poll storage" subscribe option can be used to set the queue depth.
    /// </remarks
    /// <returns>Array of timestamped values; emptry if no new changes</returns>
    TimestampedObject<byte[]>[] ReadQueue();

    /// <summary>
    /// Get an array of all value changes since the last call to ReadQueue.
    /// </summary>
    /// <remarks>
    /// The "poll storage" subscribe option can be used to set the queue depth.
    /// </remarks
    /// <returns>Array of values; emptry if no new changes</returns>
    byte[][] ReadQueueValues();
}
