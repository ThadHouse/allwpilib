// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;

namespace NetworkTables.Natives;

public static unsafe partial class NtCore
{

    [LibraryImport("ntcore", EntryPoint = "NT_SetBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetBoolean(int pubentry, long time,  value);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultBoolean(int pubentry, long time,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetBoolean(int pubentry,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicBoolean(int pubentry,  defaultValue, out NtTimestampedBoolean value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedBoolean(ref NtTimestampedBoolean value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedBoolean* ReadQueueBoolean(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueBoolean(NtTimestampedBoolean* arr, ref nuint len);
    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueValuesBoolean")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void ReadQueueValuesBoolean(NtTimestampedBoolean* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetInteger(int pubentry, long time,  value);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultInteger(int pubentry, long time,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetInteger(int pubentry,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicInteger(int pubentry,  defaultValue, out NtTimestampedInteger value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedInteger(ref NtTimestampedInteger value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedInteger* ReadQueueInteger(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueInteger(NtTimestampedInteger* arr, ref nuint len);
    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueValuesInteger")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void ReadQueueValuesInteger(NtTimestampedInteger* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetFloat(int pubentry, long time,  value);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultFloat(int pubentry, long time,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetFloat(int pubentry,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicFloat(int pubentry,  defaultValue, out NtTimestampedFloat value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedFloat(ref NtTimestampedFloat value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedFloat* ReadQueueFloat(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueFloat(NtTimestampedFloat* arr, ref nuint len);
    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueValuesFloat")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void ReadQueueValuesFloat(NtTimestampedFloat* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDouble(int pubentry, long time,  value);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultDouble(int pubentry, long time,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetDouble(int pubentry,  defaultValue);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicDouble(int pubentry,  defaultValue, out NtTimestampedDouble value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedDouble(ref NtTimestampedDouble value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedDouble* ReadQueueDouble(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueDouble(NtTimestampedDouble* arr, ref nuint len);
    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueValuesDouble")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void ReadQueueValuesDouble(NtTimestampedDouble* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetString(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultString(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetString(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicString(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedString value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedString(ref NtTimestampedString value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedString* ReadQueueString(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueString")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueString(NtTimestampedString* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetRaw(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultRaw(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetRaw(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicRaw(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedRaw value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedRaw(ref NtTimestampedRaw value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedRaw* ReadQueueRaw(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueRaw")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueRaw(NtTimestampedRaw* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetBooleanArray(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultBooleanArray(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetBooleanArray(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicBooleanArray(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedBooleanArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedBooleanArray(ref NtTimestampedBooleanArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedBooleanArray* ReadQueueBooleanArray(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueBooleanArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueBooleanArray(NtTimestampedBooleanArray* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetIntegerArray(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultIntegerArray(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetIntegerArray(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicIntegerArray(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedIntegerArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedIntegerArray(ref NtTimestampedIntegerArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedIntegerArray* ReadQueueIntegerArray(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueIntegerArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueIntegerArray(NtTimestampedIntegerArray* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetFloatArray(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultFloatArray(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetFloatArray(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicFloatArray(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedFloatArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedFloatArray(ref NtTimestampedFloatArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedFloatArray* ReadQueueFloatArray(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueFloatArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueFloatArray(NtTimestampedFloatArray* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDoubleArray(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultDoubleArray(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetDoubleArray(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicDoubleArray(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedDoubleArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedDoubleArray(ref NtTimestampedDoubleArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedDoubleArray* ReadQueueDoubleArray(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueDoubleArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueDoubleArray(NtTimestampedDoubleArray* arr, ref nuint len);


    [LibraryImport("ntcore", EntryPoint = "NT_SetStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetStringArray(int pubentry, long time,  value, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefaultStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefaultStringArray(int pubentry, long time,  defaultValue, nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    
    public static partial  GetStringArray(int pubentry,  defaultValue, nuint defaultValueLen, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomicStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomicStringArray(int pubentry,  defaultValue, nuint defaultValueLen, out NtTimestampedStringArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestampedStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestampedStringArray(ref NtTimestampedStringArray value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestampedStringArray* ReadQueueStringArray(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueueStringArray")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueueStringArray(NtTimestampedStringArray* arr, ref nuint len);


}