// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

using System;

namespace NetworkTables;

public readonly partial struct NetworkTableValue
{
{% for t in types %}
    /// <summary>
    /// Gets if entry value contains a {{ t.dotnet.ValueType }}.
    /// </summary>
    public bool Is{{ t.TypeName }} => Type == NetworkTableType.{{ t.TypeName }};
{% endfor %}
{% for t in types %}
    /// <summary>
    /// Get the {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <returns>The {{ t.dotnet.ValueType }} value.</returns>
    /// <exception cref="InvalidCastException">Thrown if the entry value is not of {{ t.dotnet.ValueType }} type.</exception>
    public {{ t.dotnet.ValueType }} Get{{ t.TypeName }}()
    {
        if (Type != NetworkTableType.{{ t.TypeName }})
        {
            throw new InvalidCastException($"cannot convert {Type} to {{ t.dotnet.ValueType }}");
        }
        return {{ t.dotnet.GetCall }};
    }
{% endfor %}
{% for t in types %}
{% if t.dotnet.IsArray %}
    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <returns>The entry value</returns>
    public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value)
    {
        return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value);
    }

    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <param name="time">the creation time to use (instead of the current time)</param>
    /// <returns>The entry value</returns>
    public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value, long time)
    {
        return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value, time);
    }
{% else %}
    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <returns>The entry value</returns>
    public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value)
    {
        return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value);
    }

    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <param name="time">the creation time to use (instead of the current time)</param>
    /// <returns>The entry value</returns>
    public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value, long time)
    {
        return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value, time);
    }
{% endif -%}

{% endfor %}
}
