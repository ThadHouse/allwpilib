// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;
using NetworkTables.Natives;
using WPIUtil.Marshal;

namespace NetworkTables;

/** A network table entry value. */
[NativeMarshalling(typeof(NetworkTableValueMarshaller))]
[StructLayout(LayoutKind.Auto)]
public readonly struct NetworkTableValue : INativeArrayFree<NetworkTableValueMarshaller.NativeNetworkTableValue>, INativeFree<NetworkTableValueMarshaller.NativeNetworkTableValue>
{

    public static unsafe void Free(NetworkTableValueMarshaller.NativeNetworkTableValue* ptr)
    {
        NtCore.DisposeValue(ptr);
    }

    public static unsafe void FreeArray(NetworkTableValueMarshaller.NativeNetworkTableValue* ptr, int len)
    {
        NtCore.DisposeValueArray(ptr, (nuint)len);
    }

  internal NetworkTableValue(NetworkTableType type, object? obj, long time, long serverTime) {
    Type = type;
    Time = time;
    ServerTime = serverTime;
    m_objectValue = obj;
  }

  internal NetworkTableValue(NetworkTableType type, long value): this(type, null, NtCore.Now(), 1) {
    m_longValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, float value): this(type, null, NtCore.Now(), 1) {
    m_floatValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, double value): this(type, null, NtCore.Now(), 1) {
    m_doubleValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, object value): this(type, value, NtCore.Now(), 1) {}

  internal NetworkTableValue(NetworkTableType type, long value, long time): this(type, null, NtCore.Now(), 1) {
    m_longValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, float value, long time): this(type, null, NtCore.Now(), 1) {
    m_floatValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, double value, long time): this(type, null, NtCore.Now(), 1) {
    m_doubleValue = value;
  }

  internal NetworkTableValue(NetworkTableType type, object value, long time): this(type, value, time, 1) {
  }


  /**
   * Get the data type.
   *
   * @return The type.
   */
  public NetworkTableType Type { get; }

  /**
   * Get the data value stored.
   *
   * @return The type.
   */
  public object? Value {
    get {
      if (m_objectValue != null) {
        return m_objectValue;
      }
      // TODO load value
      return null;
    }
  }

  /**
   * Get the creation time of the value in local time.
   *
   * @return The time, in the units returned by NtCore.Now().
   */
  public long Time { get; }

  /**
   * Get the creation time of the value in server time.
   *
   * @return The server time.
   */
  public long ServerTime { get; }

  /*
   * Type Checkers
   */

  /**
   * Determine if entry value contains a value or is unassigned.
   *
   * @return True if the entry value contains a value.
   */
  public bool IsValid  => Type != NetworkTableType.Unassigned;

{% for t in types %}
  /**
   * Determine if entry value contains a {{ t.dotnet.ValueType }}.
   *
   * @return True if the entry value is of {{ t.dotnet.ValueType }} type.
   */
  public bool Is{{ t.TypeName }} => Type == NetworkTableType.{{ t.TypeName }};
{% endfor %}
  /*
   * Type-Safe Getters
   */
{% for t in types %}
  /**
   * Get the {{ t.dotnet.ValueType }} value.
   *
   * @return The {{ t.dotnet.ValueType }} value.
   * @throws ClassCastException if the entry value is not of {{ t.dotnet.ValueType }} type.
   */
  public {{ t.dotnet.ValueType }} Get{{ t.TypeName }}() {
    if (Type != NetworkTableType.{{ t.TypeName }}) {
      throw new InvalidCastException($"cannot convert {Type} to {{ t.dotnet.ValueType }}");
    }
    return {{ t.dotnet.GetCall }};
  }
{% endfor %}
  /*
   * Factory functions.
   */
{% for t in types %}
  /**
   * Creates a {{ t.dotnet.ValueType }} value.
   *
   * @param value the value
   * @return The entry value
   */
  public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value) {
    return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value{{ t.dotnet.MakeCall }});
  }

  /**
   * Creates a {{ t.dotnet.ValueType }} value.
   *
   * @param value the value
   * @param time the creation time to use (instead of the current time)
   * @return The entry value
   */
  public static NetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ValueType }} value, long time) {
    return new NetworkTableValue(NetworkTableType.{{ t.TypeName }}, value{{ t.dotnet.MakeCall }}, time);
  }

{% endfor %}

// TODO Generate equals

  private readonly object? m_objectValue;
  private readonly long m_longValue;
  private readonly float m_floatValue;
  private readonly double m_doubleValue;
}
