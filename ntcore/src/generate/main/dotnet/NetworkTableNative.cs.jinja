// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;

namespace NetworkTables.Natives;

public static unsafe partial class NtCore
{
{% for t in types %}
    [LibraryImport("ntcore", EntryPoint = "NT_Set{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool Set{{ t.TypeName }}(int pubentry, long time, {% if t.dotnet.Marshal %}[{{ t.dotnet.Marshal }}] {% endif %}{{ t.dotnet.NativeParam }} value{% if t.c.IsArray %}, nuint len{% endif %});

    [LibraryImport("ntcore", EntryPoint = "NT_SetDefault{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    [return: MarshalAs(UnmanagedType.I4)]
    public static partial bool SetDefault{{ t.TypeName }}(int pubentry, long time, {% if t.dotnet.Marshal %}[{{ t.dotnet.Marshal }}] {% endif %}{{ t.dotnet.NativeParam }} defaultValue{% if t.c.IsArray %}, nuint len{% endif %});

    [LibraryImport("ntcore", EntryPoint = "NT_Get{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    {% if t.dotnet.Marshal %}[return: {{ t.dotnet.Marshal }}]{% endif %}
    public static partial {{ t.dotnet.NativeParam }} Get{{ t.TypeName }}(int pubentry, {% if t.dotnet.Marshal %}[{{ t.dotnet.Marshal }}] {% endif %}{{ t.dotnet.NativeParam }} defaultValue{% if t.c.IsArray %}, nuint defaultValueLen, out nuint len{% endif %});

    [LibraryImport("ntcore", EntryPoint = "NT_GetAtomic{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void GetAtomic{{ t.TypeName }}(int pubentry, {% if t.dotnet.Marshal %}[{{ t.dotnet.Marshal }}] {% endif %}{{ t.dotnet.NativeParam }} defaultValue{% if t.c.IsArray %}, nuint defaultValueLen{% endif %}, out NtTimestamped{{ t.TypeName }} value);

    [LibraryImport("ntcore", EntryPoint = "NT_DisposeTimestamped{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void DisposeTimestamped{{ t.TypeName }}(ref NtTimestamped{{ t.TypeName }} value);

    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueue{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial NtTimestamped{{ t.TypeName }}* ReadQueue{{ t.TypeName }}(int handle, out nuint len);

    [LibraryImport("ntcore", EntryPoint = "NT_FreeQueue{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void FreeQueue{{ t.TypeName }}(NtTimestamped{{ t.TypeName }}* arr, ref nuint len);

{%- if not t.c.IsArray %}
    [LibraryImport("ntcore", EntryPoint = "NT_ReadQueueValues{{ t.TypeName }}")]
    [UnmanagedCallConv(CallConvs = [typeof(CallConvCdecl)])]
    public static partial void ReadQueueValues{{ t.TypeName }}(NtTimestamped{{ t.TypeName }}* arr, ref nuint len);
{%- endif %}

{% endfor %}
}
