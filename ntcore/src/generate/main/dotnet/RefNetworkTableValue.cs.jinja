// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./ntcore/generate_topics.py. DO NOT MODIFY

using System;
using System.Runtime.InteropServices;
using NetworkTables.Natives;

namespace NetworkTables;

/// <summary>
/// A NetworkTable entry value used for write purposes
/// </summary>
public readonly ref partial struct RefNetworkTableValue
{
{% for t in types %}
{% if t.dotnet.IsArray %}
    internal RefNetworkTableValue({{ t.dotnet.ParamType }} value)
    {
        Type = NetworkTableType.{{ t.TypeName }};
        Time = NtCore.Now();
        m_byteSpan = MemoryMarshal.AsBytes(value);
    }

    internal RefNetworkTableValue({{ t.dotnet.ParamType }} value, long time)
    {
        Type = NetworkTableType.{{ t.TypeName }};
        Time = time;
        m_byteSpan = MemoryMarshal.AsBytes(value);
    }
{% else %}
    internal RefNetworkTableValue({{ t.dotnet.ParamType }} value)
    {
        Type = NetworkTableType.{{ t.TypeName }};
        Time = NtCore.Now();
        m_structValue = new(value);
    }
    internal RefNetworkTableValue({{ t.dotnet.ParamType }} value, long time)
    {
        Type = NetworkTableType.{{ t.TypeName }};
        Time = time;
        m_structValue = new(value);
    }
{% endif %}
    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <returns>The entry value</returns>
    public static RefNetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ParamType }} value)
    {
        return new RefNetworkTableValue(value);
    }

    /// <summary>
    /// Creates a {{ t.dotnet.ValueType }} value.
    /// </summary>
    /// <param name="value">the value</param>
    /// <param name="time">the creation time to use (instead of the current time)</param>
    /// <returns>The entry value</returns>
    public static RefNetworkTableValue Make{{ t.TypeName }}({{ t.dotnet.ParamType }} value, long time)
    {
        return new RefNetworkTableValue(value, time);
    }
{% endfor %}
}
